{"version":3,"sources":["index.js"],"names":["require","config","logger","bodyParser","cookieParser","express","cors","app","port","process","env","PORT","myApi","corsOptions","origin","use","urlencoded","json","console","log","get","req","res","path","join","static","cwd","__dirname","post","sendEmail","body","then","replyEmail","catch","err","next","Error","status","error","listen"],"mappings":"aACAA,QAAQ,UAAUC,SAAlBD,IAAAA,OAAQA,QAAUC,UACZC,WAASF,QAAQ,eACjBG,aAAaH,QAAQ,iBACrBI,QAAAA,QAAeJ,WACfK,KAAAA,QAAUL,QACVM,IAAON,UACPO,KAAMF,QAAZ,QAGMG,KAAOC,QAAQC,IAAIC,MAAQ,KAE3BC,MAAQZ,QAAQ,YAEhBa,YAAc,CAApBC,OAAMD,2BACLC,qBAAQ,KAITP,IAAIQ,IAAIT,KAAKO,cAAbN,IAAIQ,IAAIT,OAAKO,QACbN,IAAIQ,IAAIb,WAAOc,WAAf,CACAT,UAAQJ,KAAsBI,IAA9BQ,IAAAZ,WAAAc,QAGAV,IAAIQ,IAAIZ,gBAEO,eAAfe,IAAQC,IAAOV,OACfF,IAAIA,IAAIa,IAAI,SAAAC,EAARC,GACHf,EAAIa,SAAS,+BADdb,IAAAa,IAIO,IAAA,SAAAC,EAAAC,GACNf,EAAIa,SAASG,KAAAC,KAACH,UAAa,wBAG1Bd,IAHDQ,IAAA,WAAAV,QAAAoB,OAAAhB,QAAAiB,MAAA,aAIAnB,IAAIQ,IAAI,aAAYV,QAAQoB,OAAUhB,KAAAA,KAAAkB,UAAlB,MAApB,sBACApB,IAAIQ,IAAIV,QAAAoB,OAAcpB,QAAQoB,MAAtB,aAITlB,IAAIqB,KAAK,eAAgB,SAACP,EAAKC,GAA/Bf,OAAAK,MAASiB,UAATR,EAAyBS,MACxBC,KAAOnB,WAAAA,OAAMiB,MAAAA,WAAcC,EACzBC,QAAKA,KAAA,WAAA,OAAMnB,EAAMoB,OAAN,KAAqBF,KAA3B,8BADAG,MAEA,SAAAC,GAFAZ,EAGLW,OAAM,KAAAhB,KAAAiB,OAMT3B,IAAAQ,IAAA,SAAAmB,EAAAb,EAAAC,EAAAa,GACA,IAAAC,MAAA,aACA7B,EAAIQ,OAAI,IACPoB,EAAIC,KAKL,eAAA7B,IAAAa,IAAA,OAGCb,IAAAQ,IAAA,SAAAmB,EAAAb,EAAAC,GAEAf,EAAIQ,OAAImB,EAAAG,QAAA,KACPnB,EAAAA,KAAQoB,CACRhB,QAAA,uBACAA,MAAA,OAIAf,IAPDQ,IAAA,SAAAmB,EAAAb,EAAAC,GASAf,EAAIQ,OAAImB,EAAAG,QAAA,KACPnB,EAAAA,KAAQoB,CACRhB,QAAAY,EAAWA,QACXZ,MAAAY,MAKD3B,IAAAgC,OAAA/B,KAAA","file":"../index.js","sourcesContent":["\nrequire('dotenv').config();\nconst logger = require('morgan');\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser');\nconst express = require('express');\nconst cors = require('cors');\nconst app = express();\nconst path = require('path');\n\nconst port = process.env.PORT || 9003;\n\nconst myApi = require('./api.js');\n\nconst corsOptions = {\n\torigin: 'https://jin827.github.io',\n\toptionsSuccessStatus: 200 // some legacy browsers (IE11, various SmartTVs) choke on 204\n};\n\napp.use(cors(corsOptions));\napp.use(logger('dev'));\napp.use(bodyParser.urlencoded({\n\textended: true\n}));\napp.use(bodyParser.json());\napp.use(cookieParser());\nconsole.log(`${process.cwd()}/src/server/views/index.html`);\nif (app.get('env') === 'production') {\n\tapp.get('/', (req, res) => {\n\t\tres.redirect('https://jin827.github.io');\n\t});\n} else {\n\tapp.get('/', (req, res) => {\n\t\tres.sendFile(path.join(__dirname, '/views/index.html'));\n\t\t// res.sendFile(`${process.cwd()}/src/server/views/index.html`);\n\t});\n\tapp.use('/vendors', express.static(`${process.cwd()}/vendors`));\n\tapp.use('/resources', express.static(path.join(__dirname, '../', 'client/resources')));\n\tapp.use(express.static(`${process.cwd()}/static`));\n}\n\napp.post('/api/contact', (req, res) => {\n\treturn myApi.sendEmail(req.body)\n\t\t.then(() => myApi.replyEmail(req.body))\n\t\t.then(() => res.status(201).send('Email Sent Successfully!'))\n\t\t.catch(err => {\n\t\t\tconsole.error(err);\n\t\t\tres.status(400).json(err);\n  \t});\n});\n\n// error handlers\n// catch 404 and forward to error handler\napp.use(function (err, req, res, next) {\n\tnew Error('Not Found');\n\terr.status = 404;\n\tnext(err);\n});\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'production') {\n\t// production error handler\n\t// no stacktraces leaked to user\n\tapp.use((err, req, res) => {\n\t\tconsole.error(err);\n\t\tres.status(err.status || 500);\n\t\tres.json({\n\t\t\tmessage: 'An error has occured',\n\t\t\terror: {}\n\t\t});\n\t});\n} else {\n\tapp.use((err, req, res) => {\n\t\tconsole.error(err);\n\t\tres.status(err.status || 500);\n\t\tres.json({\n\t\t\tmessage: err.message,\n\t\t\terror: err\n\t\t});\n\t});\n}\n\napp.listen(port, () => {\n\tconsole.log(`Server is up on port ${port}!`);\n});\nconsole.log(`NODE_ENV : ${process.env.NODE_ENV} mode`);\n"]}